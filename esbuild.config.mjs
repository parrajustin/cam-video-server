import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";

import path from "path";
import { writeFile, readFile } from "fs/promises";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const version = process.env.SYNCBUNDLEVERSION ?? "v???";
const prod = process.argv[2] === "production";

let entry_point = "src/main.ts";

const context = await esbuild.context({
    banner: {
        js: banner
    },
    entryPoints: [entry_point],
    bundle: true,
    external: [...builtins],
    format: "cjs",
    target: "node22",
    platform: "node",
    logLevel: "info",
    sourcemap: prod ? false : "inline",
    treeShaking: true,
    minify: prod,
    outdir: "dist",
    metafile: prod,
    define: {
        SYNCBUNDLEVERSION: `"${prod ? version : "vDev"}"`
    }
});

if (prod) {
    const result = await context.rebuild();

    await writeFile("dist/meta.json", JSON.stringify(result.metafile, undefined, 2));
    process.exit(0);
} else {
    await context.watch();
}
